{"version":3,"sources":["Dashboard/Header/Header.jsx","Dashboard/Searchbar/SearchBar.jsx","Dashboard/Emojis/EmojiResultRow.jsx","Dashboard/Emojis/EmojiResults.jsx","Dashboard/Emojis/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","PureComponent","SearchBar","handleText","event","props","handleChange","placeholder","onChange","this","EmojiResultRow","title","symbol","codePointHex","codePointAt","toString","src","alt","EmojiResults","clipboard","Clipboard","destroy","emojiData","map","emoji","Filter","searchText","maxResults","emojiList","filter","toLocaleLowerCase","includes","keywords","slice","App","state","filteredEmojis","setState","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0usKAGqBA,EAAM,kHAOxB,OAPwB,mCACzB,WACE,OACE,wBAAQC,UAAU,SAAQ,SAAC,4BAI9B,EAPwB,CAASC,iBCAfC,G,MAAS,iKAG1B,OAH0B,oCAC5BC,WAAa,SAACC,GACZ,EAAKC,MAAMC,aAAaF,IACzB,EAaA,OAbA,mCACD,WACE,OACE,qBAAKJ,UAAU,eAAc,SAC3B,8BACE,uBACEA,UAAU,aACVO,YAAY,eACZC,SAAUC,KAAKN,qBAKxB,EAhB2B,CAASF,kBCDlBS,G,MAAc,kHAehC,OAfgC,mCACjC,WACE,MAA0BD,KAAKJ,MAAvBM,EAAK,EAALA,MAAOC,EAAM,EAANA,OACTC,EAAeD,EAAOE,YAAY,GAAGC,SAAS,IAC9CC,EAAG,iDAA6CH,EAAY,QAClE,OACE,sBACEb,UAAU,sCACV,sBAAqBY,EAAO,UAE5B,qBAAKI,IAAKA,EAAKC,IAAKN,IACpB,sBAAMX,UAAU,QAAO,SAAEW,IACzB,sBAAMX,UAAU,OAAM,SAAC,yBAG5B,EAfgC,CAASC,kB,gBCCvBiB,EAAY,kHAsB9B,OAtB8B,8CAC/B,WACET,KAAKU,UAAY,IAAIC,IAAU,cAChC,kCAED,WACEX,KAAKU,UAAUE,YAChB,oBAED,WACE,IAAQC,EAAcb,KAAKJ,MAAnBiB,UACR,OACE,qBAAKtB,UAAU,0BAAyB,SACrCsB,EAAUC,KAAI,SAACC,GAAK,OACnB,cAAC,EAAe,CAEdZ,OAAQY,EAAMZ,OACdD,MAAOa,EAAMb,OAFRa,EAAMb,gBAOpB,EAtB8B,CAASV,iB,OCc3BwB,MAff,SAAgBC,EAAYC,GAC1B,OAAOC,EACJC,QAAO,SAACL,GACP,QACEA,EAAMb,MAAMmB,oBAAoBC,SAASL,EAAWI,wBAIlDN,EAAMQ,SAASD,SAASL,MAK7BO,MAAM,EAAGN,ICVOO,EAAG,iKASpB,OAToB,oCACtBC,MAAQ,CACNC,eAAgBX,EAAO,GAAI,KAC3B,EAEFnB,aAAe,SAACF,GACd,EAAKiC,SAAS,CACZD,eAAgBX,EAAOrB,EAAMkC,OAAOC,MAAO,OAE9C,EAUA,OAVA,mCAED,WACE,OACE,gCACE,cAAC,EAAM,IACP,cAAC,EAAS,CAACjC,aAAcG,KAAKH,eAC9B,cAAC,EAAY,CAACgB,UAAWb,KAAK0B,MAAMC,wBAGzC,EAnBqB,CAASnC,iBCOlBuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6bf4bb2c.chunk.js","sourcesContent":["import { PureComponent } from \"react\";\nimport \"./Header.css\";\n\nexport default class Header extends PureComponent {\n  render() {\n    return (\n      <header className=\"header\">\n        Robert Emoji Search\n      </header>\n    );\n  }\n}\n","import { PureComponent } from \"react\";\nimport \"./SearchBar.css\";\n\nexport default class SearchBar extends PureComponent {\n  handleText = (event) => {\n    this.props.handleChange(event);\n  };\n  render() {\n    return (\n      <div className=\"search-input\">\n        <div>\n          <input\n            className=\"input-text\"\n            placeholder=\"Search Emoji\"\n            onChange={this.handleText}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { PureComponent } from \"react\";\nimport \"./EmojiResultRow.css\";\nexport default class EmojiResultRow extends PureComponent {\n  render() {\n    const { title, symbol } = this.props;\n    const codePointHex = symbol.codePointAt(0).toString(16);\n    const src = `//cdn.jsdelivr.net/emojione/assets/png/${codePointHex}.png`;\n    return (\n      <div\n        className=\"component-emoji-result-row copy-it \"\n        data-clipboard-text={symbol}\n      >\n        <img src={src} alt={title} />\n        <span className=\"title\">{title}</span>\n        <span className=\"info\">Click to Copy</span>\n      </div>\n    );\n  }\n}\n","import { PureComponent } from \"react\";\nimport EmojiResultsRow from \"./EmojiResultRow\";\nimport Clipboard from \"clipboard\";\nexport default class EmojiResults extends PureComponent {\n  componentDidMount() {\n    this.clipboard = new Clipboard(\".copy-it\");\n  }\n\n  componentWillUnmount() {\n    this.clipboard.destroy();\n  }\n\n  render() {\n    const { emojiData } = this.props;\n    return (\n      <div className=\"component-emoji-results\">\n        {emojiData.map((emoji) => (\n          <EmojiResultsRow\n            key={emoji.title}\n            symbol={emoji.symbol}\n            title={emoji.title}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import emojiList from \"./emojiList.json\";\n\nfunction Filter(searchText, maxResults) {\n  return emojiList\n    .filter((emoji) => {\n      if (\n        emoji.title.toLocaleLowerCase().includes(searchText.toLocaleLowerCase())\n      ) {\n        return true;\n      }\n      if (emoji.keywords.includes(searchText)) {\n        return true;\n      }\n      return false;\n    })\n    .slice(0, maxResults);\n}\nexport default Filter;\n","import { PureComponent } from \"react\";\nimport Header from \"./Dashboard/Header/Header.jsx\";\nimport SearchBar from \"./Dashboard/Searchbar/SearchBar.jsx\";\nimport EmojiResults from \"./Dashboard/Emojis/EmojiResults\";\nimport Filter from \"./Dashboard/Emojis/Filter\";\nexport default class App extends PureComponent {\n  state = {\n    filteredEmojis: Filter(\"\", 20),\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      filteredEmojis: Filter(event.target.value, 15),\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <SearchBar handleChange={this.handleChange} />\n        <EmojiResults emojiData={this.state.filteredEmojis} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}